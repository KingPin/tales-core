<schema name="tales-core" version="1.4">
	
	<types>

		<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
		<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

		<!-- A general text field that has reasonable, generic
		cross-language defaults: it tokenizes with StandardTokenizer,
		removes stop words from case-insensitive "stopwords.txt"
		(empty by default), and down cases.  At query time only, it
		also applies synonyms. -->
		<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<!-- in this example, we will only use synonyms at query time
				<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
				-->
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>

	</types>

	<fields>
		
		<field name="id" type="string" indexed="true" stored="true"/> 
		<field name="user" type="string" indexed="true" stored="true"/>
		<dynamicField name="*" type="text_general" indexed="true" stored="true"/> 

		<!-- catchall field, containing all other searchable text fields (implemented
		via copyField further on in this schema  -->
		<field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>

	</fields>
	
	<uniqueKey>id</uniqueKey>
	<defaultSearchField>text</defaultSearchField>

	<copyField source="*" dest="text"/>


</schema>

